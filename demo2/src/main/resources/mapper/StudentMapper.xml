<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- UserDao的映射文件，UserDao的实现-->
<mapper namespace="com.newer.dao.StudentMapper">

    <resultMap id="stuList1" type="Student">
        <id property="stuId" column="STUID"/>
        <!--column时查询处理对应列的别名-->
        <result property="stuName" column="STUNAME"/>
        <result property="stuSex" column="STUSEX"/>
        <result property="stuJointime" column="STUNJOINTIME"/>
        <association property="stuClass" javaType="ClassInfo" resultMap="com.newer.dao.ClassInfoMapper.classList1">

        </association>
    </resultMap>

    <sql id="sql1">
      SELECT stuid,stuname,stusex,stujointime,classid,classname,classgrade from stuinfo s left join classinfo c2 ON s.sclassid = c2.classid
    </sql>

    <select id="findAll" resultMap="stuList1">
        <include refid="sql1"/>
    </select>

    <resultMap id="stuList2" type="Student">
        <id property="stuId" column="STUID"/>
        <!--column时查询处理对应列的别名-->
        <result property="stuName" column="STUNAME"/>
        <result property="stuSex" column="STUSEX"/>
        <result property="stuJointime" column="STUNJOINTIME"/>
        <association property="stuClass" javaType="ClassInfo" fetchType="lazy"
                     column="SCLASSID" select="com.newer.dao.ClassInfoMapper.findById" />
    </resultMap>
    <select id="findAll2" resultMap="stuList2">
        SELECT stuid,stuname,stujointime,sclassid from stuinfo
    </select>

    <resultMap id="stuList3" type="Student">
    <id property="stuId" column="STUID"/>
    <!--column时查询处理对应列的别名-->
    <result property="stuName" column="STUNAME"/>
    <result property="stuSex" column="STUSEX"/>
    </resultMap>
    <select id="findByClassId" resultMap="stuList3">
        select stuid,stuname,stusex from stuinfo where sclassid=#{classId}
    </select>

    <update id="updateStudent" parameterType="Student">
        UPDATE  stuinfo
        <!--<set>-->
        <trim prefix="SET" suffixOverrides=",">
        <if test="stuName!=null and stuName!=''">
            stuname=#{stuName},
        </if>
        <if test="stuSex!=null and stuSex!=''">
            stusex=#{stuSex},
        </if>
        <if test="stuClass!=null and stuClass.classId!=null">
            sclassid=#{stuClass.classId}
        </if>
        </trim>
    <!--</set>-->
         where stuid=#{stuId}
    </update>

    <select id="findAdv" resultMap="stuList1">
        <include refid="sql1"/>
        <where>
            <if test="stuName!=null and stuName!=''">
                stuname like #{stuName}
            </if>
            <if test="stuSex!=null and stuSex!=''">
                 AND stusex=#{stuSex}
            </if>
            <if test="beginTime!=null and endTime!=null">
                AND stujoinTime BETWEEN #{beginTime} AND #{endTime}
            </if>
            <if test="stuClass!=null and stuClass.classId!=null">
                AND sclassid=#{stuClass.classId}
            </if>
            
        </where>
    </select>


    <select id="findAdv2" resultMap="stuList1">
        <include refid="sql1"/>
        WHERE stuid IN
        <foreach collection="array" item="stuId" open="(" close=")" separator=",">
            #{stuId}
        </foreach>
    </select>

<insert id="addCourses">
    INSERT  INTO sc (sid, cid)
    SELECT #{stuId},a.*  FROM (
    <foreach collection="courseIds" item="courseId" separator="UNION">
       SELECT #{courseId}
</foreach>
    ) a
</insert>

    <sql id="whereSql">
        <where>
            <if test="stuName!=null and stuName!=''">
                stuname like #{stuName}
            </if>
            <if test="stuSex!=null and stuSex!=''">
                AND stusex=#{stuSex}
            </if>
            <if test="beginTime!=null and endTime!=null">
                AND stujointime BETWEEN #{beginTime} AND #{endTime}
            </if>
            <if test="stuClass!=null and stuClass.classId!=null">
                AND sclassid=#{stuClass.classId}
            </if>
        </where>
    </sql>

    <sql id="orderSql">

        ORDER  BY
        <choose>
            <when test="order=='stujointime'">
                STUJOINTIME
            </when>
            <when test="order=='stusex'">
                STUSEX
            </when>
            <when test="order=='classid'">
                SCLASSID
            </when>
            <otherwise>STUID</otherwise>
        </choose>

        <if test="sort=='DESC'">
            DESC
        </if>
        <if test="sort==null or sort=='ASC'">
            ASC
        </if>
    </sql>

    <sql id="pageSql">
        <bind name="firstLine" value="(pageNo-1)*pageSize"/>
        limit #{firstLine},#{pageSize}
    </sql>

    <select id="findAll3" resultMap="stuList1">
        <include refid="sql1"/>
        <include refid="whereSql"/>
        <include refid="orderSql"/>
        <include refid="pageSql"/>
    </select>

</mapper>